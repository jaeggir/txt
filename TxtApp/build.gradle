buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {

        release {
            storeFile file("txt-release.keystore")
            keyAlias "txt"

            // These two lines make gradle believe that the signingConfigs
            // section is complete. Without them, tasks like installRelease
            // will not be available!
            storePassword "notMyRealPassword"
            keyPassword "notMyRealPassword"
        }
    }

    buildTypes {
        release {
            debuggable false
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-rules.txt')
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            runProguard false
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/CONTRIBUTORS.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/COPYING'
        exclude 'META-INF/COPYING.LESSER'
    }
}

task askForPasswords << {
    // Must create String because System.readPassword() returns char[]
    // (and assigning that below fails silently)
    def pw = new String(System.console().readPassword("\n\$ Keystore password: "))

    android.signingConfigs.release.storePassword = pw
    android.signingConfigs.release.keyPassword = pw
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}


dependencies {
    compile 'com.android.support:appcompat-v7:19.0.1'
}
